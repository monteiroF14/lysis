{
	"compilerOptions": {
		"lib": ["ESNext"],
		"module": "ESNext",
		"target": "esnext",
		"jsx": "react",
		"jsxFactory": "Html.createElement",
		"jsxFragmentFactory": "Html.Fragment",
		"moduleDetection": "force" /* Control what method is used to detect module-format JS files. */,

		/* Modules */
		// "rootDir": "./",                                  /* Specify the root folder within your source files. */
		"moduleResolution": "Bundler" /* Specify how TypeScript looks up a file from a given module specifier. */,
		"baseUrl": "src/",
		// "typeRoots": [] /* Specify multiple folders that act like './node_modules/@types'. */,
		"types": [
			"bun-types"
		] /* Specify type package names to be included without being referenced in a source file. */,
		// "allowUmdGlobalAccess": true,                     /* Allow accessing UMD globals from modules. */
		// "moduleSuffixes": [],                             /* List of file name suffixes to search when resolving a module. */
		"resolveJsonModule": true /* Enable importing .json files. */,

		/* JavaScript Support */
		"allowJs": true /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */,
		// "checkJs": true,                                  /* Enable error reporting in type-checked JavaScript files. */
		// "maxNodeModuleJsDepth": 1,                        /* Specify the maximum folder depth used for checking JavaScript files from 'node_modules'. Only applicable with 'allowJs'. */

		/* Interop Constraints */
		"esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
		"forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

		/* Type Checking */
		"strict": true /* Enable all strict type-checking options. */,
		"noImplicitAny": true,
		"strictNullChecks": true /* When type checking, take into account 'null' and 'undefined'. */,
		// "strictFunctionTypes": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
		// "strictBindCallApply": true,                      /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
		// "strictPropertyInitialization": true,             /* Check for class properties that are declared but not set in the constructor. */
		// "noImplicitThis": true,                           /* Enable error reporting when 'this' is given the type 'any'. */
		// "useUnknownInCatchVariables": true,               /* Default catch clause variables as 'unknown' instead of 'any'. */
		"noUnusedParameters": true /* Raise an error when a function parameter isn't read. */,
		// "noImplicitReturns": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */
		// "noFallthroughCasesInSwitch": true,               /* Enable error reporting for fallthrough cases in switch statements. */
		// "noImplicitOverride": true,                       /* Ensure overriding members in derived classes are marked with an override modifier. */
		// "noPropertyAccessFromIndexSignature": true,       /* Enforces using indexed accessors for keys declared using an indexed type. */
		// "allowUnusedLabels": true,                        /* Disable error reporting for unused labels. */
		"allowUnreachableCode": true /* Disable error reporting for unreachable code. */,

		/* Completeness */
		"skipLibCheck": true /* Skip type checking all .d.ts files. */,
		"paths": {
			"react": ["./node_modules/@types/react"]
		}
	}
}
